import random
import sys

class Player:
    def __init__(self):
        self.hearts = 50.0
        self.points = 0
        self.level = 1
        self.items = []
        self.rare_items = ["Huy·∫øt Nguy·ªát Ki·∫øm", "Long T·ªôc Chi Gi√°p"]
        
    def add_rare_item(self):
        if len(self.items) < 2:
            item = random.choice([i for i in self.rare_items if i not in self.items])
            self.items.append(item)
            print(f"B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c v·∫≠t ph·∫©m hi·∫øm: {item}!")

class Question:
    def __init__(self):
        self.c1 = [
            {"question": "What does 'sustainable' mean? (C1)", "answer": "able to continue"},
            {"question": "Complete the word: E_vi_onment (C1)", "answer": "nron"},
        ]
        self.c2 = [
            {"question": "What is the synonym of 'preserve'? (C2)", "answer": "conserve"},
            {"question": "What does 'carbon footprint' mean? (C2)", "answer": "total emissions"},
        ]
        self.cc = [
            {"question": "Name 3 renewable energy sources (CC)", "answer": "solar wind hydro"},
            {"question": "What's the main greenhouse gas? (CC)", "answer": "carbon dioxide"},
        ]

class Game:
    def __init__(self):
        self.player = Player()
        self.questions = Question()
        self.current_enemy = None
        
    def create_enemy(self):
        is_boss = self.player.level % 5 == 0
        health = 2000 if is_boss else 1000
        return {"health": health, "is_boss": is_boss}
    
    def get_random_question(self, category=None):
        if category == "CC":
            return random.choice(self.questions.cc)
        else:
            pool = self.questions.c1*8 + self.questions.c2*3 + self.questions.cc*1
            return random.choice(pool)
    
    def check_answer(self, question):
        user_answer = input("C√¢u tr·∫£ l·ªùi c·ªßa b·∫°n: ").strip().lower()
        return user_answer == question["answer"].lower()
    
    def enemy_attack(self, is_boss):
        attack_type = random.choices(["normal", "strong"], weights=[7, 3] if not is_boss else [5, 5])[0]
        
        if is_boss:
            damage = 2 if attack_type == "normal" else 3.5
        else:
            damage = 1 if attack_type == "normal" else 2.5
            
        self.player.hearts -= damage
        print(f"Qu√°i v·∫≠t s·ª≠ d·ª•ng {attack_type} t·∫•n c√¥ng! M·∫•t {damage} tim")
        print(f"M√°u hi·ªán t·∫°i: {self.player.hearts:.1f} ‚ù§Ô∏è\n")
    
    def check_rare_drop(self):
        if random.random() < 0.0013:
            self.player.add_rare_item()
    
    def show_status(self):
        print(f"\n{'üåü'*10} T·∫ßng {self.player.level} {'üåü'*10}")
        print(f"Tim: {self.player.hearts:.1f} ‚ù§Ô∏è | ƒêi·ªÉm: {self.player.points} ‚≠ê")
        if self.current_enemy["is_boss"]:
            print(f"BOSS üíÄ | M√°u: {self.current_enemy['health']}/2000")
        else:
            print(f"Titan ‚öîÔ∏è | M√°u: {self.current_enemy['health']}/1000")
    
    def combat_loop(self):
        self.current_enemy = self.create_enemy()
        
        while self.current_enemy["health"] > 0 and self.player.hearts > 0:
            self.show_status()
            
            # Player's turn
            action = input("Ch·ªçn h√†nh ƒë·ªông (1-ƒê√°nh, 2-H·ªìi m√°u, 3-Bi·∫øn h√¨nh): ")
            
            if action == "1":
                question = self.get_random_question()
                print(f"\nC√¢u h·ªèi: {question['question']}")
                if self.check_answer(question):
                    damage = self.current_enemy["health"] * 0.75
                    self.current_enemy["health"] -= damage
                    self.player.points += 30
                    print(f"ƒê√°nh tr√∫ng! G√¢y {damage:.1f} s√°t th∆∞∆°ng!")
                else:
                    print("Tr·∫£ l·ªùi sai! M·∫•t l∆∞·ª£t!")
                    
            elif action == "2":
                if self.player.points >= 40:
                    self.player.points -= 40
                    self.player.hearts += 1
                    print("H·ªìi 1 tim!")
                else:
                    print("Kh√¥ng ƒë·ªß ƒëi·ªÉm!")
                    
            elif action == "3":
                if self.player.points >= 250:
                    self.player.points -= 250
                    question = self.get_random_question("CC")
                    print(f"\nC√¢u h·ªèi ƒê·∫∂C BI·ªÜT: {question['question']}")
                    if self.check_answer(question):
                        reward = random.choice([500, "item"])
                        if reward == "item":
                            self.player.add_rare_item()
                        else:
                            self.player.points += reward
                        print(f"Nh·∫≠n ph·∫ßn th∆∞·ªüng ƒë·∫∑c bi·ªát: {reward}!")
                    else:
                        print("Tr·∫£ l·ªùi sai!")
                else:
                    print("Kh√¥ng ƒë·ªß ƒëi·ªÉm!")
                    
            else:
                print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")
                continue
            
            # Check enemy defeat
            if self.current_enemy["health"] <= 0:
                if self.current_enemy["is_boss"]:
                    self.player.points += 300
                print("\n‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ Chi·∫øn th·∫Øng! ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ")
                self.check_rare_drop()
                return True
            
            # Enemy's turn
            self.enemy_attack(self.current_enemy["is_boss"])
        
        return False
    
    def start(self):
        print("""
        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ 
        ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ    ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ
        ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ
        ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ      ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ  ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ
        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ    ‚ñà‚ñà‚ÄÅ     ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ
        """)
        
        while self.player.hearts > 0:
            if not self.combat_loop():
                break
            self.player.level += 1
            input("\nNh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...")
        
        print("\nGame Over!")
        print(f"ƒê·∫°t ƒë∆∞·ª£c c·∫•p ƒë·ªô: {self.player.level}")
        print(f"V·∫≠t ph·∫©m hi·∫øm: {', '.join(self.player.items) if self.player.items else 'Kh√¥ng c√≥'}")

if __name__ == "__main__":
    game = Game()
    game.start()